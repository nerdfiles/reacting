////
/// .
/// @filepath ./src/novel-component/index.scss
/// @group index
/// @author aha <patagnome@protonmail.com>
////
:root {}

body {}

#top {}

.m-view--novel-component__default__,
[className='m-view--novel-component__default__'] {

}

div {}
p {}
P {}

blockquote {}

h1 {}
h2, h3 {}
h3, h6 {}

form:not(:last-child),
form[action=''] {
  outline: 1px solid rgba(25, 25, 25, 0);
}
form {}
fieldset {}
input[type='text'] {}
input[type='number'] {}
input[type='password'] {}
button {}

/// ```
///   (a)   `*=_ as ._`
///   (a.1) `._ as [class*='...']_` (assuming '*' and whatever name, '...')
///   (a.2) `._<ctrl+y,\leader> as [class='']_<ctrl+y,\leader>`/ 
///   (a.3) `. as _`/ 
/// ```
///
/// > [(a.2) returns no tag output with emmet where `[class='_-']` 
/// literally does; namely `<div class="_-">_</div>`. `[class]` yields
/// with an empty `@class` style value.]
/// 
/// either way (a) and (a.1) where the latter presupposes emmet is applied,
/// where we expect 
/// 
/// ```
///   (b:emmet:@::[]) `<... @class "m-...--...__...__">...</...>`
/// ```
///
///   that is,
///
/// ```
///   (b) `<div class="m-...--...__...__">_</div>`
/// ```
/// 
/// rendered
/// 
/// ```
///    (c) <... class="m-...--...__...__">...</...>
/// ```
///
/// non-space-delimited names enable normative level of description for naming 
/// and semantics-driven code design in interaction modeling and processing.
/// 
/// ## naming
///
/// [controls].
///  
/// ## semantics-driven code design
///
/// [schema] and [punning].
///
/// > ... we make use of punning of an OWL metamodeling capability that allows 
/// > to treat model elements as classes and individual at the same time.
/// >
/// > "semantics-driven programming of self-adaptive reactive systems". [sdcd]
///
/// synechdoche, subscendence, metonymy, patanymy, pleonymy, ananymy, 
/// nomonymy, monotonymy, automorphism, echo, etc., *not* "[metaphor]" and 
/// "non-parodic [irony]" (*pretence*). y'know, the stuff happening in 
/// morphological linguistics.
///
/// ![open problems](https://arrested.surge.sh/assets/content-images/open-problems.png)
/// 
/// <hr />
///
/// ![examples of domain dependent roles of patterns](https://arrested.surge.sh/assets/content-images/examples-domain-dependent-roles-of-patterns.png)
///
/// > Although a metaphorical utterance can be prefaced with the phrase To 
/// > speak metaphorically, an ironical utterance cannot be prefaced with the 
/// > phrase To speak ironically.
/// >
/// > "irony and metarepresentation". wilson, deirdre.
/// 
/// ## panalogy
///
/// we consider a panalogy between [hypermedia-orientation][schema], in 
/// general, and [n-quad][controls]'s, in particular, presented `/...{?s,p,o,g}` 
/// formulation and atomic bem's `<...[class='a-b--e__m__'>`.
/// 
/// indeed, for `spog <> abem` with `emmet`,
/// 
/// ```
/// `/$$( element ){?s,p,o,g}` <> `<$$( element )[class="a-b--e__m__"]>`
/// ```
///
/// so, we can model all interactions in css to produce pure css carousels, 
/// etc., avoiding js traps like here [vitals] (see [trap] and [cachedjs])
///  
/// ## footnotes
/// 
/// (links in markdown)
/// 
/// [vitals]: https://web.dev/patterns/web-vitals-patterns/carousels/
/// [trap]: https://www.gnu.org/philosophy/javascript-trap.html
/// [cachedjs]: https://www.webperf.tips/tip/cached-js-misconceptions/
/// [controls]: https://linkeddatafragments.org/specification/quad-pattern-fragments/#controls
/// [schema]: https://apisyouwonthate.com/blog/common-hypermedia-patterns-with-json-hyper-schema
/// [sdcd]: https://www.worldscientific.com/doi/10.1142/S0218194020400082
/// [irony]: https://www.researchgate.net/publication/223333203_The_pragmatics_of_verbal_irony_Echo_or_pretence 
/// [metaphor]: https://www.cambridge.org/core/journals/language-and-cognition/article/metonymies-are-more-literal-than-metaphors-evidence-from-ratings-of-german-idioms/1CBBCFF893235E161608B6834860FA69
/// [punning]: https://www.w3.org/TR/owl2-new-features/#F12:_Punning
/// @name index.css:molecule (class="m", class="m-...")
/// @summary css molecule for an infocule. with what must the logging console 
/// begin?
/// @example
/// [class]*3<emmet:ctrl+y,\leader>
/// <div class="">_</div>
/// <div class="">_</div>
/// <div class="">_</div>
/// @example
/// [class="m..."]*3<emmet:ctrl+y,\leader>
/// <div class="m">_</div><!-- we're describing molecular style -->
/// <div class="m-..."></div><!-- describing molecular block style -->
/// <div class="m-...--..."></div><!-- describing {m...b} elemental style -->
/// <div class="m-...--...__...__"></div><!-- describing {m...b, b...e} style modes -->
.m,
div[className*='m-'] {
  background-color: silver;
}

// EOF
